{"version":3,"file":"static/js/427.03a36e85.chunk.js","mappings":"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","sources":["DefaultLoginDialog.tsx"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type {ChangeEvent, FormEvent} from 'react';\nimport type {CustomLoginDialogProps} from 'reviewstack/src/LoginDialog';\n\nimport './DefaultLoginDialog.css';\n\nimport {Box, Link, Text} from '@primer/react';\nimport {useCallback, useState} from 'react';\n\nexport default function LoginDialog({\n  setTokenAndHostname,\n}: CustomLoginDialogProps): React.ReactElement | null {\n  const [token, setToken] = useState('');\n  const [hostname, setHostname] = useState('github.com');\n\n  const onChangeToken = useCallback(\n    (e: ChangeEvent) => setToken((e.target as HTMLInputElement).value),\n    [],\n  );\n  const onChangeHostname = useCallback(\n    (e: ChangeEvent) => setHostname((e.target as HTMLInputElement).value),\n    [],\n  );\n\n  const onSubmit = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault();\n      setTokenAndHostname(token.trim(), hostname.trim());\n      return false;\n    },\n    [token, hostname, setTokenAndHostname],\n  );\n\n  const isInputValid = isValid(token, hostname);\n\n  return (\n    <>\n      <div className=\"LoginDialog-container\">\n        <Box\n          bg=\"canvas.default\"\n          className=\"LoginDialog\"\n          borderWidth={1}\n          borderColor=\"border.default\">\n          <form onSubmit={onSubmit}>\n            <Box pb={2}>\n              <Text>\n                This tool requires an authentication token so it can read and write data from\n                GitHub. Follow GitHub's{' '}\n                <Link\n                  href=\"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token\"\n                  target=\"_blank\">\n                  instructions to create a personal access token (PAT)\n                </Link>{' '}\n                and <Text fontWeight=\"bold\">be sure to store it in a safe place</Text>. After\n                initially viewing your PAT, GitHub will never show it to you again.\n              </Text>\n              {/* We may add a checkbox to aide in persisting these values. */}\n            </Box>\n            <Box pb={2}>\n              <Text>\n                Alternatively, if you have authenticated with the{' '}\n                <Link href=\"https://cli.github.com/\">GitHub CLI</Link>, you can use{' '}\n                <Text as=\"code\" bg=\"canvas.subtle\">\n                  gh auth status -t\n                </Text>{' '}\n                to dump the PAT you are using for{' '}\n                <Text as=\"code\" bg=\"canvas.subtle\">\n                  gh\n                </Text>\n                , which can also be used with ReviewStack if you are comfortable using the same PAT\n                for both tools:\n                <Box as=\"pre\" bg=\"canvas.subtle\" padding={2}>\n                  {`$ gh auth status -t\ngithub.com\n  \\u2713 Logged in to github.com as username (oauth_token)\n  \\u2713 Git operations for github.com configured to use https protocol.\n  \\u2713 Token: gho_this_is_your_real_PAT_xxxxxxxxxxxxxx\n`}\n                </Box>\n              </Text>\n            </Box>\n            <Box pb={2}>\n              <Text fontStyle=\"italic\">\n                Note your PAT will be stored in <code>localStorage</code> so you will not have to\n                enter it again when you return to this page. Click{' '}\n                <Text fontStyle=\"normal\" fontWeight=\"bold\">\n                  Logout\n                </Text>{' '}\n                to delete your PAT and any data that was fetched from GitHub using your PAT from the\n                browser.\n              </Text>\n            </Box>\n            <Box pb={2}>\n              Personal Access Token: <br />\n              <input\n                value={token}\n                size={60}\n                required={true}\n                onChange={onChangeToken}\n                placeholder=\"paste your token here\"\n              />\n            </Box>\n            <Box pb={2}>\n              Hostname: <br />\n              <input\n                value={hostname}\n                size={60}\n                required={true}\n                onChange={onChangeHostname}\n                placeholder=\"github.com or GitHub Enterprise hostname\"\n              />\n            </Box>\n            <Box>\n              <input\n                type=\"submit\"\n                value=\"Grant access to your GitHub data\"\n                disabled={!isInputValid}\n              />\n            </Box>\n          </form>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nfunction isValid(token: string, hostname: string): boolean {\n  if (token.trim() === '') {\n    return false;\n  }\n\n  const normalizedHostname = hostname.trim();\n  return normalizedHostname !== '' && normalizedHostname.indexOf('.') !== -1;\n}\n"],"names":["LoginDialog","setTokenAndHostname","token","setToken","useState","hostname","setHostname","onChangeToken","useCallback","e","target","value","onChangeHostname","onSubmit","preventDefault","trim","isInputValid","normalizedHostname","indexOf","isValid","_jsx","className","children","Box","bg","borderWidth","borderColor","_jsxs","pb","Text","Link","href","fontWeight","as","padding","fontStyle","size","required","onChange","placeholder","type","disabled"],"sourceRoot":""}