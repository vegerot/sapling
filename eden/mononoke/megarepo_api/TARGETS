load("@fbcode_macros//build_defs:rust_binary.bzl", "rust_binary")
load("@fbcode_macros//build_defs:rust_library.bzl", "rust_library")
load("@fbsource//tools/build_defs:glob_defs.bzl", "glob")

oncall("mononoke")

rust_library(
    name = "commit_transformation",
    srcs = glob(["commit_transformation/src/**/*.rs"]),
    autocargo = {"cargo_toml_dir": "commit_transformation"},
    test_deps = [
        "fbsource//third-party/rust:maplit",
        "//common/rust/shed/facet:facet",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/blobstore:blobstore",
        "//eden/mononoke/repo_factory:test_repo_factory",
        "//eden/mononoke/tests/utils:tests_utils",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:derivative",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:slog",
        "fbsource//third-party/rust:thiserror",
        "//common/rust/shed/borrowed:borrowed",
        "//common/rust/shed/sorted_vector_map:sorted_vector_map",
        "//eden/mononoke/blobrepo:blobsync",
        "//eden/mononoke/blobrepo:repo_blobstore",
        "//eden/mononoke/blobrepo_utils:blobrepo_utils",
        "//eden/mononoke/bonsai_hg_mapping:bonsai_hg_mapping",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/changesets/changesets_creation:changesets_creation",
        "//eden/mononoke/derived_data:skeleton_manifest",
        "//eden/mononoke/filestore:filestore",
        "//eden/mononoke/manifest:manifest",
        "//eden/mononoke/megarepo_api/if:megarepo_configs-rust",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/pushrebase:pushrebase",
        "//eden/mononoke/repo_attributes/commit_graph/commit_graph:commit_graph",
        "//eden/mononoke/repo_attributes/repo_derived_data:repo_derived_data",
        "//eden/mononoke/repo_attributes/repo_identity:repo_identity",
        "//eden/mononoke/server/context:context",
    ],
)

rust_library(
    name = "megarepo_mapping",
    srcs = glob([
        "mapping/src/**/*.rs",
        "mapping/schemas/**/*.sql",
    ]),
    autocargo = {"cargo_toml_dir": "mapping"},
    test_deps = [
        "fbsource//third-party/rust:maplit",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/mononoke_types:mononoke_types-mocks",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:serde",
        "fbsource//third-party/rust:serde_json",
        "//common/rust/shed/sql:sql",
        "//eden/mononoke/blobrepo:repo_blobstore",
        "//eden/mononoke/common/rust/sql_ext:sql_ext",
        "//eden/mononoke/common/sql_construct:sql_construct",
        "//eden/mononoke/derived_data:fsnodes",
        "//eden/mononoke/filestore:filestore",
        "//eden/mononoke/manifest:manifest",
        "//eden/mononoke/megarepo_api/if:megarepo_configs-rust",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/repo_attributes/repo_derived_data:repo_derived_data",
        "//eden/mononoke/server/context:context",
    ],
)

rust_library(
    name = "megarepo_error",
    srcs = glob(["megarepo_error/src/**/*.rs"]),
    autocargo = {"cargo_toml_dir": "megarepo_error"},
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:thiserror",
        "//eden/mononoke/blobstore:blobstore",
        "//eden/mononoke/derived_data:derived_data_manager",
        "//eden/mononoke/scs/if:source_control-rust",
    ],
)

rust_library(
    name = "megarepo_config",
    srcs = glob([
        "megarepo_config/src/**/*.rs",
        "megarepo_config/schemas/**/*.sql",
    ]),
    autocargo = {"cargo_toml_dir": "megarepo_config"},
    test_deps = [
        "fbsource//third-party/rust:maplit",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:clap",
        "fbsource//third-party/rust:slog",
        ":megarepo_error",
        "//common/rust/shed/facet:facet",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/sql:sql",
        "//eden/mononoke/blobstore:blobstore_factory",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/common/futures_watchdog:futures_watchdog",
        "//eden/mononoke/common/rust/sql_ext:sql_ext",
        "//eden/mononoke/common/sql_construct:sql_construct",
        "//eden/mononoke/megarepo_api/if:megarepo_configs-rust",
        "//eden/mononoke/metaconfig:metaconfig_types",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/server/context:context",
        "//thrift/lib/rust:fbthrift",
    ],
)

rust_library(
    name = "pushredirect",
    srcs = glob([
        "pushredirect/src/**/*.rs",
        "pushredirect/schemas/**/*.sql",
    ]),
    autocargo = {"cargo_toml_dir": "pushredirect"},
    test_deps = [
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
    ],
    deps = [
        "fbsource//third-party/rust:abomonation",
        "fbsource//third-party/rust:abomonation_derive",
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:serde",
        "fbsource//third-party/rust:serde_derive",
        "//common/rust/shed/facet:facet",
        "//common/rust/shed/sql:sql",
        "//eden/mononoke/common/rust/sql_ext:sql_ext",
        "//eden/mononoke/common/sql_construct:sql_construct",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/server/context:context",
    ],
)

rust_library(
    name = "requests_table",
    srcs = glob([
        "requests_table/src/**/*.rs",
        "requests_table/schemas/**/*.sql",
    ]),
    autocargo = {"cargo_toml_dir": "requests_table"},
    test_deps = [
        "fbsource//third-party/rust:tokio",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "//common/rust/shed/facet:facet",
        "//common/rust/shed/sql:sql",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/common/rust/sql_ext:sql_ext",
        "//eden/mononoke/common/sql_construct:sql_construct",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/server/context:context",
    ],
)

rust_library(
    name = "async_requests",
    srcs = glob(["async_requests/src/**/*.rs"]),
    autocargo = {"cargo_toml_dir": "async_requests"},
    test_deps = [
        "fbsource//third-party/rust:serde_json",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/repo_factory:test_repo_factory",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:rand",
        "fbsource//third-party/rust:tokio",
        ":megarepo_config",
        ":megarepo_error",
        ":requests_table",
        "//eden/mononoke/blobstore:blobstore",
        "//eden/mononoke/blobstore:memblob",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/common/sql_construct:sql_construct",
        "//eden/mononoke/megarepo_api/if:megarepo_types-thrift-rust",
        "//eden/mononoke/mononoke_api:mononoke_api",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/mononoke_types/serialization:mononoke_types_serialization-rust",
        "//eden/mononoke/scs/if:source_control-rust",
        "//eden/mononoke/server/context:context",
        "//thrift/lib/rust:fbthrift",
    ],
)

rust_binary(
    name = "async_requests_worker",
    srcs = glob(["async_requests_worker/src/**/*.rs"]),
    autocargo = {"cargo_toml_dir": "async_requests_worker"},
    test_deps = [
        ":requests_table",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/mononoke_api:mononoke_api",
        "//eden/mononoke/repo_factory:test_repo_factory",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-stream",
        "fbsource//third-party/rust:clap",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:slog",
        "fbsource//third-party/rust:tokio",
        ":async_requests",
        ":megarepo_api",
        ":megarepo_error",
        "//common/rust/shed/cloned:cloned",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/hostname:hostname",
        "//eden/mononoke/cmdlib:cmdlib_logging",
        "//eden/mononoke/cmdlib:environment",
        "//eden/mononoke/cmdlib/mononoke_app:mononoke_app",
        "//eden/mononoke/megarepo_api:megarepo_config",
        "//eden/mononoke/megarepo_api/if:megarepo_types-thrift-rust",
        "//eden/mononoke/metaconfig:metaconfig_types",
        "//eden/mononoke/mononoke_api:mononoke_api",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/scs/if:source_control-rust",
        "//eden/mononoke/server/context:context",
    ],
)

rust_library(
    name = "megarepo_api",
    srcs = glob(["src/**/*.rs"]),
    test_deps = [
        "fbsource//third-party/rust:maplit",
        "//common/rust/shed/fbinit:fbinit",
        "//common/rust/shed/fbinit:fbinit-tokio",
        "//eden/mononoke/mononoke_types:mononoke_types-mocks",
        "//eden/mononoke/repo_factory:test_repo_factory",
        "//eden/mononoke/tests/utils:tests_utils",
    ],
    deps = [
        "fbsource//third-party/rust:anyhow",
        "fbsource//third-party/rust:async-trait",
        "fbsource//third-party/rust:bytes",
        "fbsource//third-party/rust:futures",
        "fbsource//third-party/rust:itertools",
        "fbsource//third-party/rust:parking_lot",
        "fbsource//third-party/rust:slog",
        ":async_requests",
        ":commit_transformation",
        ":megarepo_config",
        ":megarepo_error",
        ":megarepo_mapping",
        ":requests_table",
        "//common/rust/shed/async_once_cell:async_once_cell",
        "//common/rust/shed/justknobs_stub:justknobs",
        "//common/rust/shed/sorted_vector_map:sorted_vector_map",
        "//eden/mononoke/blobrepo:repo_blobstore",
        "//eden/mononoke/blobstore:blobstore",
        "//eden/mononoke/bonsai_hg_mapping:bonsai_hg_mapping",
        "//eden/mononoke/bookmarks:bookmarks",
        "//eden/mononoke/changesets/changesets_creation:changesets_creation",
        "//eden/mononoke/cmdlib/mononoke_app:mononoke_app",
        "//eden/mononoke/derived_data:bulk_derivation",
        "//eden/mononoke/derived_data:fsnodes",
        "//eden/mononoke/derived_data:unodes",
        "//eden/mononoke/derived_data/mercurial_derivation:mercurial_derivation",
        "//eden/mononoke/filestore:filestore",
        "//eden/mononoke/manifest:manifest",
        "//eden/mononoke/mercurial:mercurial_types",
        "//eden/mononoke/metaconfig:metaconfig_types",
        "//eden/mononoke/mononoke_api:mononoke_api",
        "//eden/mononoke/mononoke_types:mononoke_types",
        "//eden/mononoke/mutable_renames:mutable_renames",
        "//eden/mononoke/repo_attributes/commit_graph/commit_graph:commit_graph",
        "//eden/mononoke/repo_attributes/repo_derived_data:repo_derived_data",
        "//eden/mononoke/repo_attributes/repo_identity:repo_identity",
        "//eden/mononoke/repo_authorization:repo_authorization",
        "//eden/mononoke/repo_factory:repo_factory",
        "//eden/mononoke/server/context:context",
    ],
)
